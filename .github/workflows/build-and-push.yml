name: Build, Push, and Rollout (Cloud Run Jobs)

on:
  push:
    branches: ["main"] # after PRs merge to main
    tags: ["v*"] # semantic version tags like v1.2.3

permissions:
  contents: read
  id-token: write

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REGION: ${{ vars.REGION }}
  REPO_NAME: ${{ vars.REPO_NAME }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WIF_PROVIDER }}
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.WIF_SERVICE_ACCOUNT }}
  REGISTRY: ${{ vars.REGION }}-docker.pkg.dev
  IMAGE: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.REPO_NAME }}/${{ vars.IMAGE_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---- Auth to GCP via OIDC (no JSON key) ----
      - name: Google Auth (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Generate the tag set and labels:
      # - main: edge + short SHA
      # - tag:  semver (v stripped) + latest
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE }}
          flavor: |
            latest=false
          tags: |
            type=sha,format=short,prefix=
            type=raw,value=edge,enable={{is_default_branch}}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp || github.run_id }}

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.ref }}
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move build cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Show pushed tags
        run: |
          echo "Image base: $IMAGE"
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n'

  rollout:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Google Auth (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # Rollout the new image to Cloud Run Jobs:
      # - On main: use :edge
      # - On tag:  use the semver version
      - name: Roll out to Cloud Run Jobs (main → :edge)
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          set -euo pipefail
          IMAGE_TAGGED="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:edge"
          echo "Rolling out $IMAGE_TAGGED to mlb-ingest and mlb-digest…"
          gcloud run jobs update mlb-ingest --image "$IMAGE_TAGGED" --region "${{ env.REGION }}" --project "${{ env.PROJECT_ID }}"
          gcloud run jobs update mlb-digest --image "$IMAGE_TAGGED" --region "${{ env.REGION }}" --project "${{ env.PROJECT_ID }}"
          echo "Done."

      - name: Roll out to Cloud Run Jobs (tag → :X.Y.Z)
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: |
          set -euo pipefail
          VERSION="${GITHUB_REF#refs/tags/v}"
          IMAGE_TAGGED="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${VERSION}"
          echo "Rolling out $IMAGE_TAGGED to mlb-ingest and mlb-digest…"
          gcloud run jobs update mlb-ingest --image "$IMAGE_TAGGED" --region "${{ env.REGION }}" --project "${{ env.PROJECT_ID }}"
          gcloud run jobs update mlb-digest --image "$IMAGE_TAGGED" --region "${{ env.REGION }}" --project "${{ env.PROJECT_ID }}"
          echo "Done."

  deploy-cloud-workflows:
    # Run after image build; change to `needs: rollout` if you want it after rollout.
    needs: build-and-push
    if: github.ref == 'refs/heads/main' # don't try to redeploy Workflows on tag events
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # required for google-github-actions/auth OIDC
    env:
      PROJECT_ID: ${{ vars.PROJECT_ID }}
      REGION: ${{ vars.REGION }}
      WF_NAME: mlb-orchestrator
      WF_SA: mlb-workflows-sa@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com
      WF_PATH: infra/workflows/mlb_orchestrator.yaml

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # Only redeploy Workflows if something under infra/workflows changed in the merge
      - name: Detect orchestrator changes
        id: changed
        uses: dorny/paths-filter@v3
        with:
          filters: |
            orchestrator:
              - 'infra/workflows/**'

      - name: Deploy Cloud Workflow (only if changed)
        if: steps.changed.outputs.orchestrator == 'true'
        run: |
          set -euo pipefail
          gcloud workflows deploy "$WF_NAME" \
            --location "$REGION" \
            --project "$PROJECT_ID" \
            --source "$WF_PATH" \
            --service-account "$WF_SA"
          echo "✅ Deployed $WF_NAME from $WF_PATH"

      - name: Show workflow revision
        if: steps.changed.outputs.orchestrator == 'true'
        run: |
          gcloud workflows describe "$WF_NAME" \
            --location "$REGION" \
            --project "$PROJECT_ID" \
            --format="table(name, revisionId, state, updateTime)"
