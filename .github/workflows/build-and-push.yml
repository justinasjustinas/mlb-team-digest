name: Build & Push Docker image

on:
  push:
    branches: ["main"] # after PRs are merged to main
    tags: ["v*"] # release tags like v1.2.3

permissions:
  contents: read
  id-token: write

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REGION: ${{ vars.REGION }}
  REPO_NAME: ${{ vars.REPO_NAME }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
  SERVICE_ACCOUNT_EMAIL: ${{ vars.SERVICE_ACCOUNT_EMAIL }}
  REGISTRY: ${{ vars.REGION }}-docker.pkg.dev
  IMAGE: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.REPO_NAME }}/${{ vars.IMAGE_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Auth to GCP via OIDC â€” all values come from repo Variables
      - name: Google Auth (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Generate tags & labels from Git context
      # - merge to main  -> :edge and :<shortSHA>
      # - tag vX.Y.Z     -> :X.Y.Z (v stripped) and :latest
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE }}
          flavor: |
            latest=false
          tags: |
            type=sha,format=short,prefix=
            type=raw,value=edge,enable={{is_default_branch}}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp || github.run_id }}

      # Build & push with local cache
      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.ref }}
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move build cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Show pushed tags
        run: |
          echo "Image base: $IMAGE"
          echo "Tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n'
